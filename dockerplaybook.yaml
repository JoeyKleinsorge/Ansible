# test
-
 name: Setup docker environment
 hosts: swarm
 tasks:
##############################################################################
# create dirs
  - name: create dir volume1
    file:
        path: ~/volume1
        state: directory
        mode: 0777

  - name: create dir docker
    file:
        path: ~/volume1/docker
        state: directory
        mode: 0777

  - name: create dir Downloads
    file:
        path: ~/volume1/Downloads
        state: directory
        mode: 0777

  - name: create dir media
    file:
        path: ~/volume1/Media
        state: directory
        mode: 0777

################################################################################
# Mount directories
  - name: Mount Docker
    mount:
        path: /home/homelab/volume1/docker
        src: 192.168.1.208:/volume1/docker
        fstype: nfs
        opts: rsize=8192,wsize=8192,timeo=14
        state: mounted
    become: true

  - name: Mount Downloads
    mount:
      path: /home/homelab/volume1/Downloads
      src: 192.168.1.208:/volume1/Downloads
      fstype: nfs
      opts: rsize=8192,wsize=8192,timeo=14
      state: mounted
    become: true

  - name: Mount Media
    mount:
      path: /home/homelab/volume1/Media
      src: 192.168.1.208:/volume1/Media
      fstype: nfs
      opts: rsize=8192,wsize=8192,timeo=14
      state: mounted
    become: true

#############################################################################
# add lines to environment
  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'PUID=1000'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'PGID=27'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'TZ="America/New_York"'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'USERDIR="/volume1"'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'MYSQL_ROOT_PASSWORD="@@@"'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'HTTP_USERNAME=@@@'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'HTTP_PASSWORD=@@@'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'DOMAINNAME=@@@'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'CLOUDFLARE_EMAIL=@@@'
    become: true

  - name: add lines to env
    lineinfile:
       path: /etc/environment
       line: 'CLOUDFLARE_API_KEY=@@@'
    become: true
  #############################################################################
  #   Install Packages

  - name: Add Docker GPG key
    apt_key: url=https://download.docker.com/linux/ubuntu/gpg
    become: true

  - name: Add Docker APT repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
    become: true

  - name: Install list of packages
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - docker-ce
    - nfs-common
    - network-manager-openvpn
    become: true

  - name: Install Docker compose
    shell: >
     curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose &&
     sudo chmod +x /usr/local/bin/docker-compose
    become: true

  - name: Install Private Internet Access
    script: /home/homelab/ansible/pia.sh
    become: true


###############################################################################
# Create Swarm

- name: Init Swarm Master
  hosts: master
  become: yes
  gather_facts: False
  tasks:
      - name: Swarm Init
        command: docker swarm init --advertise-addr 192.168.1.63

      - name: Get Worker Token
        command: docker swarm join-token worker -q
        register: worker_token

      - name: Show Worker Token
        debug: var=worker_token.stdout

- name: Join Swarm Cluster
  hosts: nodes
  become: yes
  gather_facts: False
  vars:
    token: "{{ hostvars[groups['master'][0]]['worker_token']['stdout'] }}"
  tasks:
    - name: Join Swarm Cluster as a Worker
      command: docker swarm join --token {{ token }} 192.168.1.63:2377
      register: worker

################################################################################
# Build containers

- name: Build containers
  hosts: master
  become: yes
  tasks:
    - name: build network
      shell: >
        docker network create traefik_proxy
  
    - name: build containers
      shell: >  
        	docker-compose -f ~/volume1/docker/docker-compose_VAR.yml up -d



          
